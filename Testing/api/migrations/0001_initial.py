# Generated by Django 3.2.25 on 2024-12-19 13:59

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role', models.CharField(choices=[('user', 'Oddiy foydalanuvchi'), ('admin', 'Admin'), ('super_admin', 'Super Admin')], default='user', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, choices=[('jizzakh', 'Jizzax'), ('tashkent', 'Toshkent'), ('samarkand', 'Samarqand'), ('fergana', 'Farg`ona'), ('andijan', 'Andijon'), ('namangan', 'Namangan'), ('bukhara', 'Buxoro'), ('termiz', 'Termiz'), ('navoi', 'Navoiy'), ('qashqadaryo', 'Qashqadaryo'), ('sirdaryo', 'Sirdaryo'), ('surxondaryo', 'Surxondaryo')], max_length=20, null=True)),
                ('type', models.CharField(blank=True, choices=[('teacher', 'Ustoz'), ('student', 'O`quvchi')], max_length=20, null=True)),
                ('avatar', models.FileField(blank=True, null=True, upload_to='avatars/')),
                ('lifetime_quiz_points', models.IntegerField(blank=True, null=True)),
                ('favorites', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, null=True, size=5)),
                ('weekly_points', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=7)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('published', 'published'), ('in_queue', 'in_queue')], default='in_queue', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('random_generator', models.BooleanField(blank=True, null=True)),
                ('number_of_questions', models.IntegerField(blank=True, null=True)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=5)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TestRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_key', models.CharField(max_length=6, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.test')),
            ],
        ),
        migrations.CreateModel(
            name='TestParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('ready', 'Ready'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='waiting', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='api.testroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'room')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_audio', models.FileField(blank=True, null=True, upload_to='question_audio/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('point', models.IntegerField(choices=[(5, '5 sec'), (10, '10 sec'), (20, '20 sec'), (30, '30 sec'), (45, '45 sec'), (60, '60 sec'), (90, '90 sec'), (120, '120')], default=0)),
                ('timer_limit', models.IntegerField(choices=[(50, '50 pt'), (100, '100 pt'), (200, '200 pt'), (250, '250 pt'), (500, '500 pt'), (750, '750 pt'), (1000, '1000 pt'), (2000, '2000 pt')], default=50)),
                ('type', models.CharField(blank=True, choices=[('multiple_choice', 'multiple_choice'), ('true_false', 'true_false'), ('type_answer', 'type_answer'), ('poll', 'poll'), ('audio', 'audio')], max_length=50, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='question_image/')),
                ('order', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.test')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_audio', models.FileField(blank=True, null=True, upload_to='answer_audio/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('correct_answer', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='api.testparticipant')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.question')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.test')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='interests',
            field=models.ManyToManyField(blank=True, related_name='interested_users', to='api.Category'),
        ),
        migrations.AddField(
            model_name='user',
            name='tests_done',
            field=models.ManyToManyField(blank=True, related_name='tests_done_by', to='api.Test'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.Permission'),
        ),
    ]
